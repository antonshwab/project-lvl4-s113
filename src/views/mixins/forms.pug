- const getInputName = (f, property) => `${f.name}[${property}]`

mixin formFor(f, options = {})
  - const realMethod = options['as']
  form(action=_.get(options, 'url') method=_.get(options, 'method', 'get'))
    if realMethod
      input(type="hidden" name="_method" value=realMethod)
    block

mixin input(f, property, label, options = { as: 'text' })
  - const value = f.object[property] === undefined ? '' : f.object[property]
  .form-group(class=(f.errors[property] && 'has-danger'))
    label= label || property
    input(name=getInputName(f, property) class='form-control' type=options['as'] value=`${value}`)
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin button(f, value='Save', type = 'submit')
  .form-group
    input(class='btn' type=`${type}` value=`${value}`)

mixin textarea(f, property, label, options = { rows: '3' })
  - const value = f.object[property] === undefined ? '' : f.object[property]
  .form-group(class=(f.errors[property] && 'has-danger'))
  label= label || property
  textarea(name=getInputName(f, property) class='form-control' rows=options['rows'])= value
  if f.errors[property]
    .form-control-feedback= f.errors[property].map(({message}) => message).join('. ')
  
mixin select(f, property, label, items, options = { value: '1', text: 'name' })
  - const value = f.object[property] === undefined ? '' : f.object[property]
  .form-group(class=(f.errors[property] && 'has-danger'))
    label= label || property
    select(name=getInputName(f, property) class='form-control')
      if items
        each item in items
          option(value= item[options['value']], selected= item[options['value']] === parseInt(value) )= `${item[options['text']]}`
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({message}) => message).join('. ')

mixin selectUser(f, property, label, users)
  .form-group(class=(f.errors[property] && 'has-danger'))
  label= label
  select(name=getInputName(f, property) class='form-control')
    if users
      each user in users
        option(value= user.id)= `${user.fullName}`
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')

mixin selectStatus(f, property, label, statuses)
  .form-group(class=(f.errors[property] && 'has-danger'))
  label= label
  select(name=getInputName(f, property) class='form-control')
    if statuses
      each status in statuses
        option(value= status.id)= `${status.name}`
    if f.errors[property]
      .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')

